# -*- coding: utf-8 -*-
# Generated by Django 1.11.26 on 2020-02-10 01:06
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import taggit.managers
import tardis.tardis_portal.models.dataset
import tardis.tardis_portal.models.experiment
import tardis.tardis_portal.models.parameters
import tardis.tardis_portal.models.token


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('taggit', '0003_taggeditem_add_unique_index'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DataFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(max_length=400)),
                ('directory', models.CharField(blank=True, max_length=255, null=True)),
                ('size', models.BigIntegerField(blank=True, null=True)),
                ('created_time', models.DateTimeField(blank=True, null=True)),
                ('modification_time', models.DateTimeField(blank=True, null=True)),
                ('mimetype', models.CharField(blank=True, db_index=True, max_length=80)),
                ('md5sum', models.CharField(blank=True, max_length=32)),
                ('sha512sum', models.CharField(blank=True, max_length=128)),
                ('deleted', models.BooleanField(default=False)),
                ('deleted_time', models.DateTimeField(blank=True, null=True)),
                ('version', models.IntegerField(default=1)),
            ],
            options={
                'ordering': ['filename'],
            },
        ),
        migrations.CreateModel(
            name='DataFileObject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uri', models.TextField(blank=True, null=True)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('verified', models.BooleanField(default=False)),
                ('last_verified_time', models.DateTimeField(blank=True, null=True)),
                ('datafile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='file_objects', to='tardis_portal.DataFile')),
            ],
        ),
        migrations.CreateModel(
            name='DatafileParameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('string_value', models.TextField(blank=True, null=True)),
                ('numerical_value', models.FloatField(blank=True, db_index=True, null=True)),
                ('datetime_value', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('link_id', models.PositiveIntegerField(blank=True, null=True)),
                ('link_ct', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DatafileParameterSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datafile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tardis_portal.DataFile')),
            ],
            options={
                'ordering': ['id'],
                'abstract': False,
            },
            bases=(models.Model, tardis.tardis_portal.models.parameters.ParameterSetManagerMixin),
        ),
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True)),
                ('dataset_id', models.CharField(default=tardis.tardis_portal.models.dataset.dataset_id_default, max_length=400, unique=True)),
                ('directory', models.CharField(blank=True, max_length=255, null=True)),
                ('created_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('modified_time', models.DateTimeField(blank=True, null=True)),
                ('immutable', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='DatasetParameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('string_value', models.TextField(blank=True, null=True)),
                ('numerical_value', models.FloatField(blank=True, db_index=True, null=True)),
                ('datetime_value', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('link_id', models.PositiveIntegerField(blank=True, null=True)),
                ('link_ct', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DatasetParameterSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tardis_portal.Dataset')),
            ],
            options={
                'ordering': ['id'],
                'abstract': False,
            },
            bases=(models.Model, tardis.tardis_portal.models.parameters.ParameterSetManagerMixin),
        ),
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(blank=True, max_length=255, null=True)),
                ('approved', models.BooleanField(default=False)),
                ('title', models.CharField(max_length=400)),
                ('institution_name', models.CharField(default='University of Auckland', max_length=400)),
                ('description', models.TextField(blank=True)),
                ('internal_id', models.CharField(default=tardis.tardis_portal.models.experiment.experiment_internal_id_default, max_length=400, unique=True)),
                ('project_id', models.CharField(max_length=400)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('handle', models.TextField(blank=True, null=True)),
                ('locked', models.BooleanField(default=False)),
                ('public_access', models.PositiveSmallIntegerField(choices=[(1, 'No public access (hidden)'), (25, 'Ready to be released pending embargo expiry'), (50, 'Public Metadata only (no data file access)'), (100, 'Public')], default=1)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ExperimentAuthor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.CharField(max_length=255)),
                ('institution', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('order', models.PositiveIntegerField()),
                ('url', models.URLField(blank=True, help_text='URL identifier for the author', max_length=255, null=True)),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tardis_portal.Experiment')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='ExperimentParameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('string_value', models.TextField(blank=True, null=True)),
                ('numerical_value', models.FloatField(blank=True, db_index=True, null=True)),
                ('datetime_value', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('link_id', models.PositiveIntegerField(blank=True, null=True)),
                ('link_ct', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExperimentParameterSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tardis_portal.Experiment')),
            ],
            options={
                'ordering': ['id'],
                'abstract': False,
            },
            bases=(models.Model, tardis.tardis_portal.models.parameters.ParameterSetManagerMixin),
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('modified_time', models.DateTimeField(blank=True, null=True)),
                ('manager_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.Group')),
            ],
            options={
                'verbose_name_plural': 'Facilities',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='FreeTextSearchField',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='GroupAdmin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.Group')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('modified_time', models.DateTimeField(blank=True, null=True)),
                ('facility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tardis_portal.Facility')),
            ],
            options={
                'verbose_name_plural': 'Instruments',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='InstrumentParameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('string_value', models.TextField(blank=True, null=True)),
                ('numerical_value', models.FloatField(blank=True, db_index=True, null=True)),
                ('datetime_value', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('link_id', models.PositiveIntegerField(blank=True, null=True)),
                ('link_ct', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InstrumentParameterSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instrument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tardis_portal.Instrument')),
            ],
            options={
                'ordering': ['id'],
                'abstract': False,
            },
            bases=(models.Model, tardis.tardis_portal.models.parameters.ParameterSetManagerMixin),
        ),
        migrations.CreateModel(
            name='JTI',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jti', models.CharField(max_length=255)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='License',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('url', models.URLField(help_text='Link to document outlining licensing details.', max_length=255)),
                ('internal_description', models.TextField()),
                ('image_url', models.URLField(blank=True, max_length=255)),
                ('allows_distribution', models.BooleanField(default=False, help_text='Does this license provide distribution rights?')),
                ('is_active', models.BooleanField(default=True, help_text='Can experiments continue to select this license?')),
            ],
        ),
        migrations.CreateModel(
            name='ObjectACL',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pluginId', models.CharField(max_length=30)),
                ('entityId', models.CharField(max_length=320)),
                ('object_id', models.PositiveIntegerField()),
                ('canRead', models.BooleanField(default=False)),
                ('canWrite', models.BooleanField(default=False)),
                ('canDelete', models.BooleanField(default=False)),
                ('isOwner', models.BooleanField(default=False)),
                ('effectiveDate', models.DateField(blank=True, null=True)),
                ('expiryDate', models.DateField(blank=True, null=True)),
                ('aclOwnershipType', models.IntegerField(choices=[(1, 'Owner-owned'), (2, 'System-owned')], default=1)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'verbose_name': 'Object ACL',
                'ordering': ['content_type', 'object_id'],
            },
        ),
        migrations.CreateModel(
            name='ParameterName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('full_name', models.CharField(max_length=60)),
                ('units', models.CharField(blank=True, max_length=60)),
                ('data_type', models.IntegerField(choices=[(1, 'NUMERIC'), (2, 'STRING'), (3, 'URL'), (4, 'LINK'), (5, 'FILENAME'), (6, 'DATETIME'), (7, 'LONGSTRING'), (8, 'JSON')], default=2)),
                ('immutable', models.BooleanField(default=False)),
                ('comparison_type', models.IntegerField(choices=[(1, 'Exact value'), (8, 'Contains'), (3, 'Range'), (4, 'Greater than'), (5, 'Greater than or equal'), (6, 'Less than'), (7, 'Less than or equal')], default=1)),
                ('is_searchable', models.BooleanField(default=False)),
                ('choices', models.CharField(blank=True, max_length=500)),
                ('order', models.PositiveIntegerField(blank=True, default=9999, null=True)),
            ],
            options={
                'ordering': ('order', 'name'),
            },
        ),
        migrations.CreateModel(
            name='Schema',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('namespace', models.URLField(max_length=255, unique=True)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('type', models.IntegerField(choices=[(1, 'Experiment schema'), (2, 'Dataset schema'), (3, 'Datafile schema'), (5, 'Instrument schema'), (4, 'None')], default=1)),
                ('subtype', models.CharField(blank=True, max_length=30, null=True)),
                ('immutable', models.BooleanField(default=False)),
                ('hidden', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='StorageBox',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('django_storage_class', models.TextField(default='storages.backends.s3boto3.S3Boto3Storage')),
                ('max_size', models.BigIntegerField(blank=True, null=True)),
                ('status', models.CharField(default='online', max_length=100)),
                ('name', models.CharField(default='default', max_length=255, unique=True)),
                ('description', models.TextField(default='Default Storage')),
                ('master_box', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_boxes', to='tardis_portal.StorageBox')),
            ],
            options={
                'verbose_name_plural': 'storage boxes',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='StorageBoxAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.TextField()),
                ('value', models.TextField()),
                ('storage_box', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attributes', to='tardis_portal.StorageBox')),
            ],
        ),
        migrations.CreateModel(
            name='StorageBoxOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.TextField()),
                ('value', models.TextField()),
                ('value_type', models.CharField(choices=[('string', 'String value'), ('pickle', 'Pickled value')], default='string', max_length=6)),
                ('storage_box', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='tardis_portal.StorageBox')),
            ],
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=30, unique=True)),
                ('expiry_date', models.DateField(default=tardis.tardis_portal.models.token._token_expiry)),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tardis_portal.Experiment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserAuthentication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=50)),
                ('authenticationMethod', models.CharField(max_length=30)),
                ('approved', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isDjangoAccount', models.BooleanField(default=True)),
                ('rapidConnectEduPersonTargetedID', models.CharField(blank=True, max_length=400, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='userauthentication',
            name='userProfile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tardis_portal.UserProfile'),
        ),
        migrations.AddField(
            model_name='parametername',
            name='schema',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tardis_portal.Schema'),
        ),
        migrations.AddField(
            model_name='instrumentparameterset',
            name='schema',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tardis_portal.Schema'),
        ),
        migrations.AddField(
            model_name='instrumentparameterset',
            name='storage_box',
            field=models.ManyToManyField(related_name='instrumentparametersets', to='tardis_portal.StorageBox'),
        ),
        migrations.AddField(
            model_name='instrumentparameter',
            name='name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tardis_portal.ParameterName'),
        ),
        migrations.AddField(
            model_name='instrumentparameter',
            name='parameterset',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tardis_portal.InstrumentParameterSet'),
        ),
        migrations.AddField(
            model_name='freetextsearchfield',
            name='parameter_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tardis_portal.ParameterName'),
        ),
        migrations.AddField(
            model_name='experimentparameterset',
            name='schema',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tardis_portal.Schema'),
        ),
        migrations.AddField(
            model_name='experimentparameterset',
            name='storage_box',
            field=models.ManyToManyField(related_name='experimentparametersets', to='tardis_portal.StorageBox'),
        ),
        migrations.AddField(
            model_name='experimentparameter',
            name='name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tardis_portal.ParameterName'),
        ),
        migrations.AddField(
            model_name='experimentparameter',
            name='parameterset',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tardis_portal.ExperimentParameterSet'),
        ),
        migrations.AddField(
            model_name='experiment',
            name='license',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tardis_portal.License'),
        ),
        migrations.AddField(
            model_name='datasetparameterset',
            name='schema',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tardis_portal.Schema'),
        ),
        migrations.AddField(
            model_name='datasetparameterset',
            name='storage_box',
            field=models.ManyToManyField(related_name='datasetparametersets', to='tardis_portal.StorageBox'),
        ),
        migrations.AddField(
            model_name='datasetparameter',
            name='name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tardis_portal.ParameterName'),
        ),
        migrations.AddField(
            model_name='datasetparameter',
            name='parameterset',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tardis_portal.DatasetParameterSet'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='experiments',
            field=models.ManyToManyField(related_name='datasets', to='tardis_portal.Experiment'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='instrument',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tardis_portal.Instrument'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='datafileparameterset',
            name='schema',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tardis_portal.Schema'),
        ),
        migrations.AddField(
            model_name='datafileparameterset',
            name='storage_box',
            field=models.ManyToManyField(related_name='datafileparametersets', to='tardis_portal.StorageBox'),
        ),
        migrations.AddField(
            model_name='datafileparameter',
            name='name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tardis_portal.ParameterName'),
        ),
        migrations.AddField(
            model_name='datafileparameter',
            name='parameterset',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tardis_portal.DatafileParameterSet'),
        ),
        migrations.AddField(
            model_name='datafileobject',
            name='storage_box',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='file_objects', to='tardis_portal.StorageBox'),
        ),
        migrations.AddField(
            model_name='datafile',
            name='dataset',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tardis_portal.Dataset'),
        ),
        migrations.AlterUniqueTogether(
            name='parametername',
            unique_together=set([('schema', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='instrument',
            unique_together=set([('name', 'facility')]),
        ),
        migrations.AlterUniqueTogether(
            name='experimentauthor',
            unique_together=set([('experiment', 'author')]),
        ),
        migrations.AlterUniqueTogether(
            name='datafileobject',
            unique_together=set([('datafile', 'storage_box')]),
        ),
        migrations.AlterUniqueTogether(
            name='datafile',
            unique_together=set([('dataset', 'directory', 'filename', 'version')]),
        ),
    ]
